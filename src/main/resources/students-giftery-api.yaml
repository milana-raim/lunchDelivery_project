openapi: 3.0.3
info:
  title: "Students Giftery API"
  version: 1.0.1
servers:
  - url: "http://localhost:8080/api/students-giftery"
tags:
  - name: Brands
  - name: Accounts
  - name: SignIn
  - name: Organizations
  - name: SignUp
  - name: Certificates
security:
  - bearerAuth: []
paths:
  /api/students-giftery/signIn/:
    post:
      operationId: signIn
      tags:
        - SignIn
      security: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInForm'
      responses:
        200:
          description: asd
          content:
            application/json:
              schema:
                type: string
  /api/students-giftery/accounts:
    get:
      security:
        - bearerAuth: []
      operationId: getAll
      tags:
        - Accounts
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDtoList'
  /api/students-giftery/accounts/getByOrganization:
    get:
      security:
        - bearerAuth: []
      operationId: getByOrganization
      parameters:
        - name: organizationId
          in: query
          schema:
            type: integer
            format: int64
      tags:
        - Accounts
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDtoList'
  /api/students-giftery/brands/:
    post:
      operationId: createBrand
      security:
        - BasicAuth: [ ]
      tags:
        - Brands
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandDto'
    delete:
      operationId: deleteBrand
      security:
        - BasicAuth: [ ]
      tags:
        - Brands
      parameters:
        - name: brandId
          schema:
            type: integer
            format: int64
          in: query
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandDto'
  /api/students-giftery/brands/{brand-id}/certificates/:
    post:
      operationId: addCertificateTemplate
      parameters:
        - name: brand-id
          schema:
            type: integer
            format: int64
          in: path
      security:
        - BasicAuth: [ ]
      tags:
        - Certificates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateTemplateForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateTemplateDto'
    delete:
      operationId: deleteCertificateTemplate
      parameters:
        - name: brand-id
          schema:
            type: integer
            format: int64
          in: path
        - name: certificateTemplateId
          schema:
            type: integer
            format: int64
          in: query
      security:
        - BasicAuth: [ ]
      tags:
        - Certificates
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateTemplateDto'
  /api/students-giftery/organizations/:
    post:
      operationId: createOrganization
      security:
        - BasicAuth: [ ]
      tags:
        - Organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationForm'
      responses:
        200:
          description: OK
          content:
            application/json:
               schema:
                 $ref: '#/components/schemas/OrganizationDto'
    delete:
      operationId: deleteOrganization
      security:
        - BasicAuth: [ ]
      tags:
        - Organizations
      parameters:
        - name: organizationId
          schema:
            type: integer
            format: int64
          in: query
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDto'
    get:
      operationId: getOrganizations
      security:
        - BasicAuth: [ ]
      tags:
        - Organizations
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDtoList'
  /api/students-giftery/organizations/join:
    post:
      operationId: addOrganizationJoinRequest
      parameters:
        - name: organizationId
          schema:
            type: integer
            format: int64
          in: query
      security:
          - BasicAuth: [ ]
      tags:
        - Organizations
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationJoinRequestDto'
  /api/students-giftery/organizations/denyJoin:
    post:
      operationId: denyOrganizationJoinRequest
      parameters:
        - name: requestId
          schema:
            type: integer
            format: int64
          in: query
      security:
        - BasicAuth: [ ]
      tags:
        - Organizations
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationJoinRequestDto'
  /api/students-giftery/organizations/confirmJoin:
    post:
      operationId: confirmOrganizationJoinRequest
      parameters:
        - name: requestId
          schema:
            type: integer
            format: int64
          in: query
      security:
        - BasicAuth: [ ]
      tags:
        - Organizations
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationJoinRequestDto'
  /api/students-giftery/organizations/unjoin:
    post:
      operationId: unjoinFromOrganization
      security:
        - BasicAuth: [ ]
      tags:
        - Organizations
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
  /api/students-giftery/signUp:
    post:
      operationId: signUp
      security: []
      tags:
        - SignUp
      description: new
      s
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpForm'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
  /api/students-giftery/confirm/{confirm-code}:
    get:
      operationId: checkConfirmCode
      security: [ ]
      tags:
        - SignUp
      parameters:
        - name: confirm-code
          schema:
            type: string
          in: path
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
  /api/students-giftery/certificates/{certificate-id}/buy/:
    get:
      operationId: buyCertificate
      security: [ ]
      tags:
        - Certificates
      parameters:
        - name: certificate-id
          schema:
            type: integer
            format: int64
          in: path
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateInstanceDto'
  /api/students-giftery/certificates/{certificate-id}/spend/:
    post:
      operationId: spendCertificate
      security: [ ]
      tags:
        - Certificates
      parameters:
        - name: certificate-id
          schema:
            type: integer
            format: int64
          in: path
        - name: purchasePrice
          schema:
            type: integer
            format: int64
          in: query
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateInstanceDto'
  /api/students-giftery/certificates/{certificate-id}/buyAsGift/{account-id}/:
    get:
      operationId: buyCertificateAsGift
      security: [ ]
      tags:
        - Certificates
      parameters:
        - name: certificate-id
          schema:
            type: integer
            format: int64
          in: path
        - name: account-id
          schema:
            type: integer
            format: int64
          in: path
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateInstanceDto'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AccountDto:
      type: object
    AccountDtoList:
      type: array
      items:
        $ref: '#/components/schemas/AccountDto'
    BrandDto:
      type: object
    CertificateTemplateDto:
      type: object
    CertificateTemplateForm:
      $ref: '#/components/schemas/CertificateTemplateForm'
    BrandForm:
      $ref: '#/components/schemas/BrandForm'
    SignInForm:
      $ref: '#/components/schemas/SignInForm'
    OrganizationDto:
      type: object
    OrganizationForm:
      $ref: '#/components/schemas/OrganizationForm'
    OrganizationDtoList:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationDto'
    OrganizationJoinRequestDto:
      $ref: '#/components/schemas/OrganizationJoinRequestDto'
    SignUpForm:
      $ref: '#/components/schemas/SignUpForm'
    CertificateInstanceDto:
      $ref: '#/components/schemas/CertificateTemplateDto'
